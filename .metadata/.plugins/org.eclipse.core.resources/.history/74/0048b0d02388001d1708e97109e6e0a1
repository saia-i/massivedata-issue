package com.example.demo.repository;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;

import com.example.demo.domain.Big;
import com.example.demo.domain.Category;
import com.example.demo.domain.CategoryDetail;
import com.example.demo.domain.Middle;
import com.example.demo.domain.Small;

@Repository
public class CategoryRepository {

	@Autowired
	private NamedParameterJdbcTemplate template;

	private static final RowMapper<Category> CATEGORY_ROW_MAPPER = new BeanPropertyRowMapper<>(Category.class);


	public Integer insert(Category category) {
		String sql = "INSERT INTO category (parent,name,name_all) VALUES(:parent,:name,:nameAll)";
		SqlParameterSource param = new BeanPropertySqlParameterSource(category);
		KeyHolder keyHolder = new GeneratedKeyHolder();
		String keyColumnNames[] = { "id" };
		template.update(sql, param, keyHolder, keyColumnNames);
		Integer id = keyHolder.getKey().intValue();
		return id;
	}

	public Category load(int id) {
		String sql = "SELECT id,parent,name,name_all FROM category WHERE id=:id;";
		SqlParameterSource param = new MapSqlParameterSource().addValue("id", id);
		List<Category> categoryList = template.query(sql, param, CATEGORY_ROW_MAPPER);
		if (categoryList.size() == 0) {
			return null;
		}
		return categoryList.get(0);
	}

	public int findByNameAll(String nameAll) {
		String sql = "SELECT id FROM category WHERE name_all=:nameAll;";
		SqlParameterSource param = new MapSqlParameterSource().addValue("nameAll", nameAll);
		List<Category> categoryList = template.query(sql, param, CATEGORY_ROW_MAPPER);
		if (categoryList.size() == 0) {
			return 0;
		}

		return categoryList.get(0).getId();
	}


}
